"use strict";(self.webpackChunknetwork_investigator=self.webpackChunknetwork_investigator||[]).push([[738],{120:(e,t,o)=>{o.d(t,{C_:()=>i,H3:()=>l,k0:()=>s,l3:()=>a,qw:()=>d});var r=o(628);const n=e=>{"requestIdleCallback"in window?window.requestIdleCallback(()=>{e().catch(()=>{})}):setTimeout(()=>{e().catch(()=>{})},2e3)},a=()=>{n(()=>Promise.all([o.e(118),o.e(173),o.e(746)]).then(o.bind(o,903))),n(()=>Promise.all([o.e(118),o.e(173),o.e(746),o.e(738)]).then(o.bind(o,335)))},i=()=>{if("undefined"!=typeof document&&!document.getElementById("critical-css")){const e=document.createElement("style");e.id="critical-css",e.textContent="\n      /* Critical CSS loaded inline for instant rendering */\n      * { box-sizing: border-box; margin: 0; padding: 0; }\n      body, html { margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; }\n      .side-panel { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; height: 100vh; display: flex; flex-direction: column; background: #fff; color: #333; overflow: hidden; font-size: 14px; }\n      .panel-header { height: 70px; padding: 15px 20px; border-bottom: 1px solid #dee2e6; display: flex; align-items: center; justify-content: space-between; background: #f8f9fa; flex-shrink: 0; }\n      .panel-header h1 { margin: 0; font-size: 20px; font-weight: 600; color: #212529; }\n      .header-actions { display: flex; gap: 10px; align-items: center; }\n      .panel-body { display: flex; flex: 1; overflow: hidden; }\n      .sidebar { width: 33%; background: #f8f9fa; border-right: 1px solid #dee2e6; display: flex; flex-direction: column; transition: width 0.3s ease; overflow-y: auto; }\n      .sidebar.collapsed { width: 40px; }\n      .main-content { flex: 1; overflow: hidden; display: flex; flex-direction: column; }\n      button { padding: 8px 16px; border: 1px solid #ddd; border-radius: 4px; background: #fff; color: #333; cursor: pointer; font-size: 12px; font-weight: 500; transition: all 0.2s ease; }\n      button:hover { background: #f8f9fa; border-color: #adb5bd; }\n      .clear-calls-btn { background: #dc3545; color: white; border-color: #dc3545; }\n      .clear-calls-btn:hover { background: #c82333; border-color: #bd2130; }\n      .network-call-item { padding: 12px 16px; border-bottom: 1px solid #e0e0e0; cursor: pointer; transition: background-color 0.2s ease; }\n      .network-call-item:hover { background-color: #f8f9fa; }\n      .network-call-item.selected { background-color: #e3f2fd; border-left: 3px solid #2196f3; }\n      .split-view { display: flex; height: 100%; }\n      .network-list-panel { flex: 1; border-right: 1px solid #dee2e6; overflow-y: auto; }\n      .network-detail-panel { flex: 1; overflow-y: auto; }\n      .sidebar-header { padding: 16px; border-bottom: 1px solid #dee2e6; display: flex; align-items: center; justify-content: space-between; }\n      .sidebar-title h3 { margin: 0; font-size: 16px; font-weight: 600; }\n      .collapse-toggle { background: none; border: none; font-size: 18px; cursor: pointer; padding: 4px; }\n      .sidebar-filter-count { font-size: 12px; color: #666; margin-left: 8px; }\n      .call-header { display: flex; align-items: center; justify-content: space-between; margin-bottom: 6px; }\n      .call-info-left { display: flex; align-items: center; gap: 8px; }\n      .call-url { font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace; font-size: 12px; color: #666; word-break: break-all; line-height: 1.4; margin-left: 0; margin-right: 0; }\n      .call-error { font-size: 11px; color: #f44336; margin-top: 4px; font-weight: 500; }\n      .method-badge { padding: 3px 8px; border-radius: 3px; font-size: 10px; font-weight: 600; text-transform: uppercase; color: white; }\n      .status-badge { padding: 3px 6px; border-radius: 3px; font-size: 10px; font-weight: 600; color: white; }\n      .duration { font-size: 11px; color: #666; font-weight: 500; }\n      .timestamp { font-size: 11px; color: #666; font-weight: 400; }\n      .skeleton { background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%); background-size: 200px 100%; animation: shimmer 1.5s infinite linear; border-radius: 4px; }\n      @keyframes shimmer { 0% { background-position: -200px 0; } 100% { background-position: calc(200px + 100%) 0; } }\n    ",document.head.insertBefore(e,document.head.firstChild)}},s=()=>{if("undefined"==typeof document)return;const e=document.createElement("link");e.rel="preconnect",e.href="https://fonts.googleapis.com",document.head.appendChild(e);const t=document.createElement("link");t.rel="dns-prefetch",t.href="//fonts.gstatic.com",document.head.appendChild(t)},l=()=>{if("undefined"!=typeof window&&"PerformanceObserver"in window)try{new PerformanceObserver(e=>{e.getEntries().forEach(e=>{r.v.log(`[Performance] ${e.entryType}:`,e)})}).observe({entryTypes:["largest-contentful-paint","first-input","layout-shift"]}),performance.mark("browser-investigator-start"),window.addEventListener("load",()=>{performance.mark("browser-investigator-loaded"),performance.measure("browser-investigator-load-time","browser-investigator-start","browser-investigator-loaded")})}catch(e){r.v.log("[Performance] Monitoring not available:",e)}},d=()=>{if("undefined"!=typeof localStorage){const e="browser-investigator-preload-cache",t={timestamp:Date.now(),version:"1.0.0"};localStorage.setItem(e,JSON.stringify(t))}a()}},363:(e,t,o)=>{o.r(t),o.d(t,{copyUUIDToClipboard:()=>d,detectUUIDs:()=>a,extractUUIDsFromURL:()=>i,formatUUID:()=>l,generateUUID:()=>p,insertUUIDIntoInput:()=>c,isValidUUID:()=>s});var r=o(628);const n=/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/gi,a=e=>{const t=[];let o;for(;null!==(o=n.exec(e));)t.push({uuid:o[0],position:o.index,context:e.substring(Math.max(0,o.index-20),o.index+40)});return t},i=e=>a(e).map(e=>e.uuid),s=e=>n.test(e),l=e=>{const t=e.replace(/-/g,"").toLowerCase();return 32!==t.length?e:`${t.slice(0,8)}-${t.slice(8,12)}-${t.slice(12,16)}-${t.slice(16,20)}-${t.slice(20)}`},d=e=>{try{let t=!1;const o=document.createElement("textarea");o.value=e,o.style.position="fixed",o.style.left="-999999px",o.style.top="-999999px",o.style.opacity="0",document.body.appendChild(o),o.focus(),o.select();try{t=document.execCommand("copy"),r.v.log("[UUID] UUID copied using execCommand")}catch(e){r.v.log("[UUID] execCommand failed:",e)}document.body.removeChild(o),t||(r.v.log("[UUID] execCommand failed, showing UUID in alert"),alert(`Copy this UUID:\n\n${e}`))}catch(e){r.v.error("Failed to copy UUID to clipboard:",e)}},c=(e,t)=>{const o=e.selectionStart||0,r=e.selectionEnd||0,n=e.value,a=n.substring(0,o)+t+n.substring(r);e.value=a;const i=o+t.length;e.setSelectionRange(i,i),e.dispatchEvent(new Event("input",{bubbles:!0}))},p=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})},628:(e,t,o)=>{o.d(t,{v:()=>r});const r={log:(...e)=>{},error:(...e)=>{},warn:(...e)=>{},debug:(...e)=>{}}},681:(e,t,o)=>{o.r(t),o.d(t,{copyToClipboardLazy:()=>i,detectUUIDsLazy:()=>l,loadClipboardUtils:()=>r,loadScreenshotUtils:()=>n,loadUuidUtils:()=>a,takeScreenshotLazy:()=>s});const r=()=>o.e(738).then(o.bind(o,931)),n=()=>o.e(738).then(o.bind(o,899)),a=()=>o.e(738).then(o.bind(o,363)),i=async e=>{const{copyToClipboard:t}=await r();return t(e)},s=async()=>{const{takeScreenshot:e}=await n();return e()},l=async e=>{const{detectUUIDs:t}=await a();return t(e)}},895:(e,t,o)=>{o.d(t,{h0:()=>a});var r=o(628);function n(e){try{const t=e.request,o=e.response;if(!t||!o)return r.v.warn("Invalid HAR entry - missing request or response:",e),null;const n={};t.headers&&Array.isArray(t.headers)&&t.headers.forEach(e=>{e.name&&e.value&&(n[e.name]=e.value)});const a={};return o.headers&&Array.isArray(o.headers)&&o.headers.forEach(e=>{e.name&&e.value&&(a[e.name]=e.value)}),{id:e._requestId||`historical_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,url:t.url||"",method:t.method||"GET",status:o.status||0,statusText:o.statusText||"",requestHeaders:n,responseHeaders:a,requestBody:t.postData?.text,responseBody:void 0,timestamp:e.startedDateTime?new Date(e.startedDateTime).getTime():Date.now(),duration:e.time||0,error:o.status>=400?`HTTP ${o.status}`:void 0}}catch(t){return r.v.error("Error converting HAR entry to NetworkCall:",t,e),null}}async function a(){const e=performance.now(),t={calls:[],loadTime:0,totalRequests:0,errors:[]};try{if("undefined"==typeof chrome||!chrome.devtools||!chrome.devtools.network||!chrome.devtools.network.getHAR){const e="Chrome DevTools network.getHAR API not available";return r.v.warn(e),t.errors.push(e),t}r.v.log("[Historical Loader] Loading existing network data...");const o=await new Promise((e,t)=>{chrome.devtools.network.getHAR(o=>{chrome.runtime.lastError?t(new Error(chrome.runtime.lastError.message)):e(o)})});if(!o||!o.entries||!Array.isArray(o.entries)){const e="Invalid HAR data received from DevTools";return r.v.warn(e,o),t.errors.push(e),t}t.totalRequests=o.entries.length,r.v.log(`[Historical Loader] Found ${t.totalRequests} existing network requests`);const a=50,i=[];for(let e=0;e<o.entries.length;e+=a)i.push(o.entries.slice(e,e+a));for(const[e,o]of i.entries()){e>0&&i.length>10&&await new Promise(e=>setTimeout(e,1));const a=o.map(e=>n(e)).filter(e=>null!==e);t.calls.push(...a),i.length>5&&r.v.log(`[Historical Loader] Processed chunk ${e+1}/${i.length} (${t.calls.length} valid calls)`)}return t.loadTime=performance.now()-e,r.v.log(`[Historical Loader] Successfully loaded ${t.calls.length} network calls in ${t.loadTime.toFixed(2)}ms`),t}catch(o){const n=o instanceof Error?o.message:"Unknown error loading historical data";return r.v.error("[Historical Loader] Error loading historical network data:",o),t.errors.push(n),t.loadTime=performance.now()-e,t}}},899:(e,t,o)=>{o.r(t),o.d(t,{takeScreenshot:()=>n});var r=o(628);const n=async()=>{r.v.log("[Network Investigator] Taking browser window screenshot...");try{chrome.runtime&&chrome.runtime.sendMessage?chrome.runtime.sendMessage({action:"captureFullBrowser"}).then(e=>{e&&e.dataUrl?i(e.dataUrl):a()}).catch(()=>{a()}):a()}catch(e){r.v.error("[Network Investigator] Error taking screenshot:",e),a()}},a=()=>{try{chrome.tabs&&chrome.tabs.captureVisibleTab?chrome.tabs.captureVisibleTab(null,{format:"png",quality:100},e=>{e?i(e):r.v.error("[Network Investigator] Failed to capture tab screenshot")}):r.v.error("[Network Investigator] Chrome tabs capture API not available")}catch(e){r.v.error("[Network Investigator] Error in fallback capture:",e)}},i=async e=>{try{const t=document.createElement("a");t.href=e,t.download=`network-investigator-screenshot-${(new Date).toISOString().replace(/[:.]/g,"-")}.png`,document.body.appendChild(t),t.click(),document.body.removeChild(t);const o=document.createElement("div");o.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: #2ecc71;\n      color: white;\n      padding: 12px 16px;\n      border-radius: 4px;\n      z-index: 10000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n    ",o.textContent="📸 Screenshot saved to Downloads folder",document.body.appendChild(o),setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},3e3);try{if(navigator.clipboard&&navigator.clipboard.write){const t=await fetch(e),o=await t.blob();await navigator.clipboard.write([new ClipboardItem({"image/png":o})]),r.v.log("[Network Investigator] Screenshot also copied to clipboard")}}catch(e){r.v.log("[Network Investigator] Clipboard copy failed (expected), screenshot downloaded")}r.v.log("[Network Investigator] Screenshot captured and downloaded successfully")}catch(e){r.v.error("[Network Investigator] Error processing screenshot:",e)}}},931:(e,t,o)=>{o.r(t),o.d(t,{copyHeadersToClipboard:()=>i,copyJsonToClipboard:()=>a,copyRawTextToClipboard:()=>s,copyToClipboard:()=>n});var r=o(628);const n=async e=>{try{if(r.v.log("[ClipboardUtils] Attempting to copy text:",e.substring(0,100)+(e.length>100?"...":"")),r.v.log("[ClipboardUtils] Text length:",e.length),r.v.log("[ClipboardUtils] Is secure context:",window.isSecureContext),r.v.log("[ClipboardUtils] Navigator clipboard available:",!!navigator.clipboard),navigator.clipboard&&window.isSecureContext)try{return await navigator.clipboard.writeText(e),r.v.log("[ClipboardUtils] Modern clipboard API succeeded"),!0}catch(e){r.v.log("[ClipboardUtils] Modern clipboard API failed, falling back to execCommand:",e)}r.v.log("[ClipboardUtils] Using execCommand fallback");const t=document.createElement("textarea");t.value=e,t.style.position="fixed",t.style.left="-999999px",t.style.top="-999999px",t.style.opacity="0",t.style.pointerEvents="none",t.style.zIndex="-1000",t.setAttribute("readonly",""),t.setAttribute("tabindex","-1"),document.body.appendChild(t),r.v.log("[ClipboardUtils] Textarea added to DOM"),t.focus(),t.select(),t.setSelectionRange(0,t.value.length),r.v.log("[ClipboardUtils] Text selected, attempting copy...");const o=document.execCommand("copy");return document.body.removeChild(t),r.v.log("[ClipboardUtils] Textarea removed from DOM"),r.v.log("[ClipboardUtils] execCommand copy result:",o),o}catch(e){return r.v.error("[ClipboardUtils] Failed to copy to clipboard:",e),!1}},a=async e=>{try{const t=JSON.stringify(e,null,2);return await n(t)}catch(e){return r.v.error("Failed to copy JSON to clipboard:",e),!1}},i=async e=>{try{let t="";return t=Array.isArray(e)?e.map(e=>`${e.name||e.key||String(e)}: ${e.value||String(e)}`).join("\n"):"object"==typeof e&&null!==e?Object.entries(e).map(([e,t])=>`${e}: ${"object"==typeof t&&null!==t?t.value||t.name||JSON.stringify(t):String(t||"")}`).join("\n"):String(e||""),await n(t)}catch(e){return r.v.error("Failed to copy headers to clipboard:",e),!1}},s=async e=>await n(e)}}]);